// Build new images with command and share on my DockerHub page
mvn clean package -P build-docker-image

--------------------------------------------------------------------------------------

// need to be within the working directory, in order to compose the docker file, and start the services/images as docker containers
docker compose up -d

// Pull new images from Docker Hub because we use 'latest' for our images
docker compose pull

// To get rid of everything in docker
docker compose down


docker run

docker start

docker pull

docker build

// command to see all the images stored in server - docker host
docker ps

--------------------------------------------------------------------------------------

// to start minikube before using kubectl
minikube start

// to see all the active pods in Kubernetes
kubectl get pods
or
kubectl get pods -w

// to see all the pods/services/resources, use this
kubectl get all

// to see more information about a pod use describe
kubectl describe <name of the pod>

// to see the logs of a pod
kubectl logs <name of the pod>

// to see the kubernetes active services
kubectl get services

// to apply some service to kubernetes/minikube
kubectl apply -f bootstrap/postgres
kubectl apply -f bootstrap/zipkin
kubectl apply -f bootstrap/rabbitmq

// to start a pod in kubernetes and run commands in your POD
kubectl exec -it postgres-0 -- psql -U amigoscode

// how to scale a service/deployment pod to zero
kubectl scale --replicas=0 deployment <name of the pod>

// how to enter a pod, for example the postgres SQL
kubectl exec -it postgres-0 -- psql -U amigoscode

// how to enter a pod on Linode cloud, for example the postgres SQL
1)   kubectl exec -it postgres-0 -- bash
2)   psql -h lin-12494-3575-pgsql-primary.servers.linodedb.net -U linpostgres -d postgres
3)   enter the password from Linode

// Use the following commands to access both services RabbitMQ and Zipkin, that are services in minikube/kubernetes
minikube service --url rabbitmq
minikube service --url zipkin

// use to start a 'tunnel' in mikikube. (rabbitmq is the name of the service)
minikube service --url rabbitmq

#########################################################################################
#########################################################################################



export KUBECONFIG=~/amigoscode-kubeconfig.yml
export KUBECONFIG=coodru-kubeconfig.yaml


1) $env:KUBECONFIG = "C:\Users\vladp\.kube\coodru-kubeconfig.yaml"

2) ls env:KUBECONFIG


kubectl apply -f path

kubectl delete -f path



kubectl get po
kubectl get nodes
// for getting the namespaces
kubectl get ns
kubectl get svc
kubectl get po -w

kubectl logs postgres-0

kubectl exec -it postgres-0 -- psql -U amigoscode

kubectl describe pod podName

kubectl logs podName
kubectl logs -f podName

kubectl exec -it postgres-0 -- psql -U linpostgres -h lin-4621-419-pgsql-primary.servers.linodedb.net
kubectl exec -it postgres-0 -- psql --help
kubectl exec -it postgres-0 -- psql -U linpostgres -h lin-4621-419-pgsql-primary.servers.linodedb.net
kubectl exec -it postgres-0 -- bash

psql -U host -U username -d database
\d
\dt
\c databaseName
create database dbName;
select * from tableName;